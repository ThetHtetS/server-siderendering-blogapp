{"version":3,"sources":["../../node_modules/axios/lib/helpers/bind.js","../../node_modules/axios/lib/utils.js","../../node_modules/axios/lib/core/AxiosError.js","../../node_modules/axios/lib/helpers/null.js","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/isarray/index.js","../../node_modules/buffer/index.js","../../node_modules/axios/lib/helpers/toFormData.js","../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../node_modules/axios/lib/helpers/buildURL.js","../../node_modules/axios/lib/core/InterceptorManager.js","../../node_modules/axios/lib/defaults/transitional.js","../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../node_modules/axios/lib/platform/browser/classes/FormData.js","../../node_modules/axios/lib/platform/browser/classes/Blob.js","../../node_modules/axios/lib/platform/browser/index.js","../../node_modules/axios/lib/platform/common/utils.js","../../node_modules/axios/lib/platform/index.js","../../node_modules/axios/lib/helpers/toURLEncodedForm.js","../../node_modules/axios/lib/helpers/formDataToJSON.js","../../node_modules/axios/lib/defaults/index.js","../../node_modules/axios/lib/helpers/parseHeaders.js","../../node_modules/axios/lib/core/AxiosHeaders.js","../../node_modules/axios/lib/core/transformData.js","../../node_modules/axios/lib/cancel/isCancel.js","../../node_modules/axios/lib/cancel/CanceledError.js","../../node_modules/axios/lib/core/settle.js","../../node_modules/axios/lib/helpers/cookies.js","../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../node_modules/axios/lib/helpers/combineURLs.js","../../node_modules/axios/lib/core/buildFullPath.js","../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../node_modules/axios/lib/helpers/parseProtocol.js","../../node_modules/axios/lib/helpers/speedometer.js","../../node_modules/axios/lib/adapters/xhr.js","../../node_modules/axios/lib/adapters/adapters.js","../../node_modules/axios/lib/core/dispatchRequest.js","../../node_modules/axios/lib/core/mergeConfig.js","../../node_modules/axios/lib/env/data.js","../../node_modules/axios/lib/helpers/validator.js","../../node_modules/axios/lib/core/Axios.js","../../node_modules/axios/lib/cancel/CancelToken.js","../../node_modules/axios/lib/helpers/spread.js","../../node_modules/axios/lib/helpers/isAxiosError.js","../../node_modules/axios/lib/helpers/HttpStatusCode.js","../../node_modules/axios/lib/axios.js","../../node_modules/axios/index.js","alerts.js","login.js","catz.js","post.js","updateSettings.js","comment.js","action.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts","../../node_modules/chart.js/auto/auto.js","chart.js","index.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Object","defineProperty","exports","value","default","bind","fn","thisArg","wrap","apply","arguments","_bind","_interopRequireDefault","require","obj","__esModule","toString","prototype","getPrototypeOf","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isBuffer","val","constructor","isFunction","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isBoolean","isPlainObject","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","append","isURLSearchParams","trim","replace","forEach","allOwnKeys","i","l","length","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","merge","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","assign","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","next","done","pair","matchAll","regExp","matches","exec","push","isHTMLForm","toCamelCase","replacer","m","p1","p2","toUpperCase","hasOwnProperty","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","noop","toFiniteNumber","defaultValue","Number","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","then","catch","_default","hasOwnProp","_utils","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","status","from","error","customProps","axiosError","cause","_AxiosError","_FormData","isVisitable","removeBrackets","renderKey","path","dots","concat","map","each","token","join","isFlatArray","some","predicates","test","toFormData","formData","options","TypeError","PlatformFormData","metaTokens","indexes","defined","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","JSON","stringify","el","index","exposedHelpers","build","pop","_toFormData","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","_AxiosURLSearchParams","url","serializeFn","serialize","serializedParams","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","forEachHandler","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams","_URLSearchParams","isBrowser","classes","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","_index","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","getOwnPropertyDescriptor","u","platform","toURLEncodedForm","data","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","entries","_transitional","_toURLEncodedForm","_formDataToJSON","stringifySafely","rawValue","parser","parse","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","rawHeaders","parsed","line","substring","_parseHeaders","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","configurable","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","parseHeaders","matcher","delete","deleted","deleteHeader","normalize","format","normalized","targets","asStrings","first","computed","accessor","internals","accessors","defineAccessor","mapped","headerValue","transformData","_AxiosHeaders","fns","transform","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","_isAbsoluteURL","_combineURLs","requestedURL","standardBrowserEnv","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","isURLSameOrigin","requestURL","nonStandardBrowserEnv","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","startedAt","bytesCount","passed","round","_settle","_cookies","_buildURL","_buildFullPath","_isURLSameOrigin","_CanceledError","_parseProtocol","_speedometer2","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","event","isXHRAdapterSupported","XMLHttpRequest","Promise","dispatchXhrRequest","requestData","requestHeaders","withXSRFToken","onCanceled","cancelToken","unsubscribe","signal","removeEventListener","Boolean","auth","username","password","unescape","btoa","fullPath","open","paramsSerializer","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","_resolve","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","_http","_xhr","knownAdapters","http","httpAdapter","xhr","xhrAdapter","renderReason","reason","isResolvedHandle","getAdapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","dispatchRequest","_transformData","_isCancel","_adapters","throwIfCancellationRequested","throwIfRequested","onAdapterResolution","onAdapterRejection","mergeConfig","headersToObject","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","computeConfigValue","configValue","VERSION","_data","validators","validator","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","_InterceptorManager","_dispatchRequest","_mergeConfig","_validator","Axios","instanceConfig","interceptors","configOrUrl","_request","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","unshiftRequestInterceptors","interceptor","unshift","responseInterceptorChain","pushResponseInterceptors","promise","chain","newConfig","onFulfilled","onRejected","getUri","forEachMethodNoData","forEachMethodWithData","generateHTTPMethod","isForm","httpMethod","CancelToken","executor","resolvePromise","promiseExecutor","_listeners","onfulfilled","splice","c","spread","callback","isAxiosError","payload","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","_Axios","_CancelToken","_spread","_isAxiosError","_HttpStatusCode","createInstance","defaultConfig","instance","axios","Cancel","all","promises","formToJSON","_axios","hideAlert","querySelector","parentElement","removeChild","showAlert","msg","markup","insertAdjacentHTML","_alerts","_typeof","o","_regeneratorRuntime","asyncIterator","Generator","Context","makeInvokeMethod","tryCatch","arg","f","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","awrap","async","reverse","prev","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","args","signup","_ref","_callee","email","passwordConfirm","res","_callee$","_context","t0","_x","_x2","_x3","_x4","login","_ref2","_callee2","_callee2$","_context2","_x5","_x6","logout","_ref3","_callee3","_callee3$","_context3","reload","forgotPassword","_ref4","_callee4","_callee4$","_context4","_x7","resetPassword","_ref5","_callee5","_callee5$","_context5","_x8","_x9","_x10","createCatz","editMode","put","_id","post","deleteCatz","cat_id","createPost","form","postId","deletePost","post_id","updateSettings","createComment","createAction","actionType","log","lim","max","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","isShort","hexParse","alpha","hexString","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","rgb","hueValue","rgb2hsl","range","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","parseInt","names","nameParse","transparent","RGB_RE","rgbParse","rgbString","to","pow","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","uid","isNullOrUndef","isNumberFinite","finiteOrDefault","valueOrDefault","toPercentage","dimension","parseFloat","toDimension","loopable","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","klen","isValidKey","_merger","tval","sval","sources","merger","current","mergeIf","_mergerIf","_deprecated","scope","previous","keyResolvers","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","setsEqual","item","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","fraction","niceFraction","_factorize","sqrt","sort","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","listeners","base","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","clearTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","formatter","Intl","NumberFormat","formatNumber","num","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","translation","fillStyle","textAlign","textBaseline","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","objProps","toTRBL","toTRBLCorners","toPadding","toFont","fallback","inputs","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","tension","_isDomSupported","_getParentNode","domNode","parentNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","listen","cb","reduce","acc","_duration","interpolators","factor","c0","helpersColor","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","animator","anim","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_cachedDataOpts","getMeta","_type","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","bars","getBasePixel","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","placed","setLayoutDims","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","_adapter","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_exportNames","_auto","LineChart","xValues","yValues","_login","_catz","_post","_updateSettings","_comment","_action","loginForm","newCatzForm","signupForm","userDataForm","userPasswordForm","forgotPasswordForm","resetPasswordForm","logOutBtn","newPostForm","commentForm","btnDeleteCatz","querySelectorAll","btnEditCatz","btnDeletePost","userMenuBtn","userMenuCloseBtn","adminMenuBtn","adminMenuCloseBtn","postView","likeIconFill","likeIconRegular","postid","classList","toggle","sidebar","main","edit","preventDefault","catid","resettoken","files","passwordCurrent","textContent","post_edit","comment","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","appendChild","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps"],"mappings":"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","file":"bundle.js","sourceRoot":"","sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.8\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","/* eslint-disable */\n\nexport const hideAlert = () => {\n    const el = document.querySelector('.alert');\n    if (el) el.parentElement.removeChild(el);\n  };\n  \n  // type is 'success' or 'error'\n  export const showAlert = (type, msg) => {\n    hideAlert();\n    const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n    document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n    window.setTimeout(hideAlert, 5000);\n  };\n  ","/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n\nexport const signup = async (name, email, password, passwordConfirm) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/signup',\n      // url: 'http://localhost:4000/api/v1/users/signup',\n      data: {\n        name,\n        email,\n        password,\n        passwordConfirm\n      }\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'registered successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      // url: '/api/v1/users/login',\n      url: 'http://localhost:4000/api/v1/users/login',\n      data: {\n        email,\n        password\n      }\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout'\n    });\n    if ((res.data.status = 'success')) location.reload(true);\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n\n\nexport const forgotPassword = async (email) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      // url: '/api/v1/users/login',\n      url: 'http://localhost:4000/api/v1/users/forgotPassword',\n      data: {\n        email\n      }\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Password reset link has been sent to your email!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\n\nexport const resetPassword = async (password,passwordConfirm, token) => {\n  try {\n    const res = await axios({\n      method: 'patch',\n      // url: '/api/v1/users/login',\n      url: `http://localhost:4000/api/v1/users/resetPassword/${token}`,\n      data: {\n        password,\n        passwordConfirm\n      }\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'your password has been reset successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\n","/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n\nexport const createCatz = async( data, editMode )=>{\n   \n    try {\n      let res;\n      if (editMode) {\n         res = await axios.put(`/api/v1/category/${data._id}`, data);\n    \n      }\n      else {\n        res = await axios.post(`/api/v1/category`, data);\n    \n      }\n   \n        if (res.data.status === 'success') {\n          showAlert('success', 'created successfully!');\n          window.setTimeout(() => {\n            location.assign('/admin/category');\n          }, 1500);\n        }\n      } catch (err) {\n        showAlert('error', err.response.data.message);\n      }\n}\n\nexport const deleteCatz = async(cat_id)=>{\n\n  try {\n      const res = await axios.delete(`/api/v1/category/${cat_id}`);\n  \n      if (res.status === 204) {\n        showAlert('success', 'deleted successfully!');\n        window.setTimeout(() => {\n          location.assign('/admin/category');\n        }, 1500);\n      }\n    } catch (err) {\n      showAlert('error', err.response.data.message);\n    }\n}","/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n \n\nexport const createPost = async( form , data)=>{\n    try {\n        let res;\n        if(data.editMode=='true') {\n          res = await axios.put(`/api/v1/posts/${data.postId}`, form, \n          {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          }\n          );\n        }\n        else {\n          res = await axios.post(`http://localhost:4000/api/v1/posts`, form, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          });\n        }\n    \n        if (res.data.status === 'success') {\n          showAlert('success', 'created successfully!');\n          // window.setTimeout(() => {\n          //   location.assign('/admin/posts');\n          // }, 1500);\n        }\n      } catch (err) {\n        showAlert('error', err.response.data.message);\n      }\n}\n\nexport const deletePost = async(post_id)=>{\n\n  try {\n      const res = await axios.delete(`/api/v1/posts/${post_id}`);\n  \n      if (res.status === 204) {\n        showAlert('success', 'deleted successfully!');\n        window.setTimeout(() => {\n          location.assign('/admin/posts');\n        }, 1500);\n      }\n    } catch (err) {\n      showAlert('error', err.response.data.message);\n    }\n}","/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updateMyPassword'\n        : 'http://localhost:4000/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n\nexport const createComment = async(data, postId)=>{\n\n    try {\n        const res = await axios.post(`/api/v1/posts/${postId}/comment`, data);\n    \n        if (res.data.status === 'success') {\n          showAlert('success', 'created successfully!');\n          window.setTimeout(() => {\n            location.assign(`/posts/${postId}`);\n          }, 1500);\n        }\n      } catch (err) {\n        showAlert('error', err.response.data.message);\n      }\n}","// Api call\n// user data from ptotect\n//and create action list\nimport { showAlert } from './alerts';\nimport axios from 'axios';\n//query for a post and render data inject\n\nexports.createAction = async (post_id , actionType) => {\n    try {\n      const res = await axios({\n        method: 'POST',\n        // url: '/api/v1/action',\n        url: `http://localhost:4000/api/v1/action/${post_id}`,\n        data: {\n          actionType\n        }\n\n      });\n  \n      if (res.data.status === 'success') {\n        // showAlert('success', 'registered successfully!');\n      }\n    } catch (err) {\n      // showAlert('error', err.response.data.message);\n    console.log('error', err);\n    }\n\n} ","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import Chart from 'chart.js/auto';\n\nexports.LineChart =() => {\n    const xValues = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"fri\", \"Sat\"];\n    const yValues = [5533, 300, 3344, 2433, 1598, 3400, 5000];\n    // const barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\n    \n    new Chart(\"myChart\", {\n    type: \"line\",\n    data: {\n    labels: xValues,\n    datasets: [{\n        // backgroundColor: barColors,\n        label: \"Weekly Views\",\n        data: yValues,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.6\n    }]\n    },\n    //options: {...}\n    });\n} ","import { login, signup, logout, forgotPassword, resetPassword } from './login';\nimport { createCatz, deleteCatz } from './catz';\nimport { createPost, deletePost } from './post';\nimport { updateSettings } from './updateSettings';\nimport { createComment } from './comment'\nimport { createAction } from './action';\nimport { LineChart } from './chart';\n\nconst loginForm = document.querySelector('.form--login');\nconst newCatzForm = document.querySelector('.form--category');\nconst signupForm = document.querySelector('.form--signup');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst forgotPasswordForm = document.querySelector('.form--forgotPassword');\nconst resetPasswordForm = document.querySelector('.form--resetPassword');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst newPostForm = document.querySelector('#form--post');\nconst commentForm = document.querySelector('.form--comment');\nconst btnDeleteCatz = document.querySelectorAll('.btnDelete--category');\nconst btnEditCatz = document.querySelectorAll('.btnEdit--category')\nconst btnDeletePost = document.querySelectorAll('.btnDelete--post')\nconst userMenuBtn = document.getElementById('userMenuBtn');\nconst userMenuCloseBtn = document.getElementById('userMenuCloseBtn');\nconst adminMenuBtn = document.getElementById('adminMenuBtn');\nconst adminMenuCloseBtn = document.getElementById('adminMenuCloseBtn');\nconst postView = document.getElementById('post__container');\nconst chart = document.getElementById('myChart');\nconst likeIconFill = document.getElementById('like_icon--fill');\nconst likeIconRegular = document.getElementById('like_icon--regular');\n\n\nvar editMode = false; \nvar cat_id;\n\nif(chart) LineChart(); \n\nif(likeIconFill)\n{   likeIconFill.addEventListener(\"click\", ()=> {\n  const postId = document.getElementById('post').dataset.postid;\n  createAction(postId, \"like\");\n})\n}\nif (likeIconRegular) \n  likeIconRegular.addEventListener(\"click\", ()=> {\n    const postId = document.getElementById('post').dataset.postid;\n    createAction(postId, \"like\");\n    console.log(\"like\");\n  })\n\n\nif(adminMenuCloseBtn)\n  adminMenuCloseBtn.addEventListener('click', ()=>{\n    let element = document.getElementById(\"sidebar\");\n    element.classList.remove(\"active\");\n  })\n\nif(adminMenuBtn)\n  adminMenuBtn.addEventListener('click', ()=>{\n    let element = document.getElementById(\"sidebar\");\n    element.classList.toggle(\"active\");\n  })\n  \n\nif (userMenuBtn) \n  userMenuBtn.addEventListener('click', ()=>{\n    let sidebar = document.querySelector('.sidebar--nav');\n    sidebar.style.transform=\"translateX(0px)\"\n    let main = document.querySelector('.main')\n    main.style.opacity=\"0.2\"\n    main.style.backgroundColor = \"rbga(0,0,0,0.5)\"\n  })\n\nif(userMenuCloseBtn)\n { var sidebar = document.querySelector('.sidebar--nav');\n  var main = document.querySelector('.main')\n  main.addEventListener('click', ()=> {\n    sidebar.style.transform =\"translateX(-280px)\"\n    main.style.opacity=\"1\"\n  })\n  userMenuCloseBtn.addEventListener('click', ()=> {\n    sidebar.style.transform =\"translateX(-280px)\"\n    main.style.opacity=\"1\"    \n})\n }\nif (btnDeletePost)\n  Array.from(btnDeletePost).forEach( item => {\n  item.addEventListener('click', e => {\n    deletePost(e.target.dataset.post_id)\n  })\n  })\n\nif (btnEditCatz)\n  Array.from(btnEditCatz).forEach(item => {\n  item.addEventListener(\"click\", (e)=>{\n  let data = JSON.parse(e.target.dataset.edit);\n  editMode= true;\n  document.getElementById('name').value= data.name\n  cat_id = data._id\n})\n})\n\n\nif (newCatzForm)\n  newCatzForm.addEventListener(\"submit\", e => {\n     e.preventDefault();\n     const name = document.getElementById('name').value;\n     createCatz({name , _id: cat_id}, editMode) \n     editMode= false;\n  })\n\nif (btnDeleteCatz)\n  Array.from(btnDeleteCatz).forEach(item => {\n   item. addEventListener(\"click\", e => {\n    deleteCatz(e.target.dataset.catid)\n   })\n})\n \n\nif (loginForm)\n  loginForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n\n\nif (forgotPasswordForm)\n  forgotPasswordForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const email = document.getElementById('email').value;\n  forgotPassword(email);\n});\n\n\nconsole.log(resetPasswordForm);\nif (resetPasswordForm)\n  {  console.log(document.getElementById('resetPasswordToken'));\n    console.log(document.getElementById('resetPasswordToken').dataset);\n    resetPasswordForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('passwordConfirm').value;\n    console.log(document.getElementById('resetPasswordToken'));\n    let token = document.getElementById('resetPasswordToken').dataset.resettoken;\n    console.log(document.getElementById('resetPasswordToken').dataset);\n    resetPassword(password, passwordConfirm, token);\n  })\n}\n\nif (signupForm)\n  signupForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('passwordConfirm').value;\n    signup(name, email, password, passwordConfirm);\n  });\n\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\n\n\nif (userDataForm)\n  userDataForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n    updateSettings(form, 'data');\n  });\n\n\n  if (userPasswordForm)\n  userPasswordForm.addEventListener('submit', async e => {\n    e.preventDefault();\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password'\n    );\n\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n\n\nif(newPostForm)\n  newPostForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('title', document.getElementById('title').value);\n    form.append('body', document.getElementById('body').value);\n    form.append('category', document.getElementById('category').value)\n    if(document.getElementById('imageCover').files[0])\n      form.append('imageCover', document.getElementById('imageCover').files[0]);\n    if(document.getElementById('image1').files[0])\n      form.append('images', document.getElementById('image1').files[0]);\n    // if(document.getElementById('image2').files[0])\n    //   form.append('images', document.getElementById('image2').files[0]);\n    // if(document.getElementById('image3').files[0])\n    //   form.append('images', document.getElementById('image3').files[0]);\n    let data = JSON.parse(document.getElementById('postEdit--data').dataset.post_edit)\n    createPost(form, data);\n  });\n \n \n  if (commentForm)\n  commentForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const comment = document.getElementById('comment').value;\n    const postId = document.getElementById('post').dataset.postid;\n   createComment({comment}, postId );\n  });\n\n  if(postView)\n  {\n    const postId = document.getElementById('post').dataset.postid;\n    createAction(postId, \"view\")\n    \n  }\n\n// if(newCatBtn)\n//   newCatBtn.addEventListener('click', ()=>{\n//     const markup = `<form class=\"form form--cat\" id=\"form--cat\">\n//     <div class=\"form__group flex\" id=\"new-cat\">\n//                         <input class=\"form__input\" id=\"category\"> </input>\n//                         <button class=\"btn-cat btn-green\" id=\"\">Create </button>\n//                    </div>\n//     </form>`;\n//     console.log(newCatForm);\n//    if(!newCatForm)  \n//      document.querySelector('.newcat--form').insertAdjacentHTML('afterbegin', markup);\n//   })\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}